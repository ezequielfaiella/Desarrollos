#!/bin/bash
export DISPLAY=:0.0

# SI HAY ERROR DETIENE EL SCRIPT
#~ set -x #ev  # SE PUEDE PONER -ex PARA QUE ADEMAS MUESTRE EL COMANDO QUE EJECUTA

# BORRA EL ARCHIVO .PID CUANDO RECIBE ALGUNA DE LAS SEÑALES ESTABLECIDAS
# Y CREA UN DIR TEMPORAL QUE AL SALIR SE BORRA
	tmp=$(mktemp -d -t tmp.XXXXXXXXXX)
function finish {
	rm -rf "$tmp"
	rm -rf "$pidfile"
}
trap finish INT TERM EXIT

# ESTABLECE UN ARCHIVO PARA LIMITAR A UNA EJECUCION
scriptname=$(basename $0)
pidfile="/$tmp/${scriptname}.pid"
#pidfile="$dir/${scriptname}.pid"
dir=$(readlink -f "$0")

# BLOQUEA LA EJECUCION A UNA SOLA VEZ POR MAQUINA
exec 200> $pidfile
flock -n 200 || exit 1
pid=$$
echo $pid 1>&200

#################################################################################
# REVISA QUE ESTE INSTALADO EL PAQUETE NECESARIO
instalado() {
#Comprobamos si esta instalado el paquete wget mediante el comando aptitude
# aux=$(aptitude show p7zip-full | grep "Estado: instalado")
PROGRAMA=pdftk
aux=$(dpkg --get-selections | grep "$PROGRAMA" | grep "install")
# if `echo "$aux" | grep "Estado: instalado" >/dev/null`
if `echo "$aux" | grep "install" >/dev/null`
then
return 1
else
return 0
fi
}
# llamamos a la funcion
instalado $PROGRAMA &> /dev/null
#Comprobamos el resultado... si da 1 es que esta instalado y si da 0 es que no esta instalado.
if [ "$?" = "1" ]
then
#Si el paquete esta instalado mando un mensaje
echo el paquete $aux ya esta instado.
#Si no estuviese instalado...por  ejemplo lo instalamos...
else
#sudo apt-get install leafpad
echo El paquete $aux no esta instalado
sudo apt-get install $PROGRAMA
fi

###################################################################################
#                           INICIO DEL SCRIPT																			#
###################################################################################

echo 'Introduzca el mes y año del recibo (AAAAMM):'
#leer el dato del teclado y guardarlo en la variable de usuario var1
read var1
#Mostrar el valor de la variable de usuario
echo $var1

MES="$var1"
#~ UBICACION=$(locate "$1")
UBICACION="$PWD"
pdftk "$1" burst output "${UBICACION}/${MES}_%02d.pdf"
rm "${UBICACION}/doc_data.txt"

SIGNATURE="/media/trabajo/Trabajo/scripts/recibo-firma2.png"

cd "$UBICACION"

for PAGINA in {01..09}; do
convert -density 300 ${MES}_${PAGINA}.pdf ${MES}_${PAGINA}.png
#~ cd $UBICACION
composite -geometry 900x"$dy"+5+490 "$SIGNATURE" ${MES}_${PAGINA}.png ${MES}_${PAGINA}.png
convert -density 300 ${MES}_${PAGINA}.png ${MES}_${PAGINA}_Firmado.pdf
#~ pdftk $TMP/firmado_pagina_$PAGINA.pdf cat output "${1%.pdf}_Firmado.pdf"
rm ${MES}_${PAGINA}.png
rm ${MES}_${PAGINA}.pdf
done


mv "${UBICACION}/${MES}_01_Firmado.pdf" "${UBICACION}/${MES}_DURAND_RAUL.pdf"
#~ mv "${UBICACION}/${MES}_02_Firmado.pdf" "${UBICACION}/${MES}_FAIELLA_WALTER.pdf"
rm "${UBICACION}/${MES}_02_Firmado.pdf"
mv "${UBICACION}/${MES}_03_Firmado.pdf" "${UBICACION}/MANSILLA_OSCAR_${MES}.pdf"
mv "${UBICACION}/${MES}_04_Firmado.pdf" "${UBICACION}/PALACIOS_MARCELO_${MES}.pdf"
mv "${UBICACION}/${MES}_05_Firmado.pdf" "${UBICACION}/PERALTA_RUBEN_${MES}.pdf"
mv "${UBICACION}/${MES}_06_Firmado.pdf" "${UBICACION}/PETTERINO_EZEQUIEL_${MES}.pdf"
mv "${UBICACION}/${MES}_07_Firmado.pdf" "${UBICACION}/VERON_CLAUDIO_${MES}.pdf"
rm "${UBICACION}/${MES}_08_Firmado.pdf"
#~ mv "${UBICACION}/${MES}_08_Firmado.pdf" "${UBICACION}/${MES}_FAIELLA_MATIAS.pdf"
mv "${UBICACION}/${MES}_09_Firmado.pdf" "${UBICACION}/${MES}_TEVEZ_IGNACIO.pdf"

#~ rm "$1"

###################################################################################
#                           FIN DEL SCRIPT		  																	#
###################################################################################

